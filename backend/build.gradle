plugins {
	// Kotlin and Spring Boot Plugins
	id("org.jetbrains.kotlin.jvm") version "1.9.25"
	id("org.jetbrains.kotlin.plugin.spring") version "1.9.25"
	id("org.springframework.boot") version "3.4.1"
	id("io.spring.dependency-management") version "1.1.7"
	id("org.jetbrains.kotlin.plugin.jpa") version "1.9.25" // JPA support for Kotlin
	id("org.jetbrains.kotlin.kapt") version "1.9.25" // Enable annotation processing
}

group = "com.chapterhive"
version = "0.0.1-SNAPSHOT"

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom(annotationProcessor)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation("org.springframework.boot:spring-boot-starter")
	implementation("org.springframework.boot:spring-boot-starter-data-jpa") // JPA for database interaction
	implementation("org.springframework.boot:spring-boot-starter-security") // Spring Security
	implementation("org.springframework.boot:spring-boot-starter-validation") // Validation
	implementation("org.springframework.boot:spring-boot-starter-web") // Web layer (REST APIs)

	// Kotlin Libraries
	implementation("org.jetbrains.kotlin:kotlin-reflect") // Kotlin reflection
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin") // Jackson Kotlin module for JSON serialization/deserialization

	// Google API Client
	implementation("com.google.api-client:google-api-client:2.2.0")

	// OAuth2 dependency
	implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
	implementation("com.google.auth:google-auth-library-oauth2-http:1.19.0")
	implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server") // OAuth2 for security

	// JSON Web Token (JWT) for signing & verifying tokens
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	implementation("io.jsonwebtoken:jjwt-impl:0.11.5")
	implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")

	// Development Tools
	developmentOnly("org.springframework.boot:spring-boot-devtools") // Hot reloading during development

	// Database
	implementation("org.postgresql:postgresql:42.7.2")
	runtimeOnly("com.h2database:h2") // H2 in-memory database (for local development/testing)
	runtimeOnly("org.postgresql:postgresql") // PostgreSQL driver

	// Lombok (requires KAPT)
	compileOnly("org.projectlombok:lombok")
	kapt("org.projectlombok:lombok") // Use KAPT instead of annotationProcessor

	// JPA Model Generation
	kapt("org.hibernate.orm:hibernate-jpamodelgen:6.3.1.Final")

	// Gson
	implementation("com.google.http-client:google-http-client-gson:1.43.3")

	// Logging
	implementation("org.slf4j:slf4j-api:2.0.9")
	implementation("ch.qos.logback:logback-classic:1.4.14")

	// Swagger/OpenAPI for API documentation
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0")

	// Test Dependencies
	testImplementation("org.springframework.boot:spring-boot-starter-test") // Spring Boot testing support
	testImplementation("org.jetbrains.kotlin:kotlin-test-junit5") // JUnit 5 for Kotlin
	testImplementation("org.springframework.security:spring-security-test") // Security test utilities
	testRuntimeOnly("org.junit.platform:junit-platform-launcher") // JUnit test launcher
}

allOpen {
	annotation("jakarta.persistence.Entity") // Open Kotlin classes for JPA
	annotation("jakarta.persistence.MappedSuperclass")
	annotation("jakarta.persistence.Embeddable")
}

tasks.named("test") {
	useJUnitPlatform()
}
